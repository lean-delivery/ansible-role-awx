---
# CONFIGURE AWX
- name: Initialize DB
  command: |
    - scl enable rh-postgresql10 "postgresql-setup initdb"
  when: true

- name: Start and enable Postgresql Database services
  systemd:
    enable: true
    state: started
    name: rh-postgresql10-postgresql

- name: Start and enable RabbitMQ service
  systemd:
    enable: true
    state: started
    name: rabbitmq-server

- name: Create Postgres user and DB
  command: |
    - scl enable rh-postgresql10 "su postgres -c \"createuser -S awx\""
    - scl enable rh-postgresql10 "su postgres -c \"createdb -O awx awx\""
  when: true

- name: Import Database data
  command: |
    - scl enable rh-python36 rh-postgresql10 "awx-manage migrate"
  become: true
  become_user: awx
  when: true

- name: Initial configuration of AWX
  command: |
    - echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'root@localhost', 'password')" | \
    scl enable rh-python36 rh-postgresql10 "awx-manage shell"
  become: true
  become_user: awx
  when: true

- name: Initial configuration of AWX
  command: |
    - scl enable rh-python36 rh-postgresql10 "awx-manage create_preload_data" # Optional Sample Configuration
    - scl enable rh-python36 rh-postgresql10 "awx-manage provision_instance --hostname=$(hostname)"
    - scl enable rh-python36 rh-postgresql10 "awx-manage register_queue --queuename=tower --hostnames=$(hostname)"
  become: true
  become_user: awx
  when: true

- name: Start and enable AWX service
  systemd:
    enable: true
    state: started
    name: awx
